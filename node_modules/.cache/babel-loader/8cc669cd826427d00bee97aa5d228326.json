{"ast":null,"code":"import React from'react';import{makeStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import useMediaQuery from'@material-ui/core/useMediaQuery';import{useTheme}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{image:{maxWidth:'100%',maxHeight:'100%'},dialog:{textAlign:'center'},button:{color:'black',background:'rgb(228, 130, 74)',margin:'0 auto',borderRadius:'2%',marginTop:'2px',marginBottom:'4x',\"&:hover\":{background:'#567CAA'}}};});export default function ModalComponent(props){var classes=useStyles();var theme=useTheme();var fullScreen=useMediaQuery(theme.breakpoints.down('sm'));return/*#__PURE__*/React.createElement(Dialog,{fullScreen:fullScreen,maxWidth:\"lg\",maxHeight:\"lg\",className:classes.dialog,open:props.open,onClose:props.onClick,\"aria-labelledby\":\"max-width-dialog-title\"},/*#__PURE__*/React.createElement(DialogContent,{className:classes.dialog},/*#__PURE__*/React.createElement(\"img\",{alt:\"gif that is supposed to load\",src:props.gifUrl,className:classes.image,height:\"auto\",width:\"auto\"})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:props.onClick,className:classes.button},\"Close\")));}","map":{"version":3,"sources":["C:/Users/thoma/Files/deployWebsite/src/components/mainPage/Modal.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","useMediaQuery","useTheme","useStyles","theme","image","maxWidth","maxHeight","dialog","textAlign","button","color","background","margin","borderRadius","marginTop","marginBottom","ModalComponent","props","classes","fullScreen","breakpoints","down","open","onClick","gifUrl"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,OAASC,QAAT,KAAyB,0BAAzB,CAGA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,SAACS,KAAD,QAAY,CACvCC,KAAK,CAAC,CACFC,QAAQ,CAAE,MADR,CAEFC,SAAS,CAAE,MAFT,CADiC,CAKvCC,MAAM,CAAC,CACHC,SAAS,CAAE,QADR,CALgC,CAQvCC,MAAM,CAAC,CACLC,KAAK,CAAE,OADF,CAELC,UAAU,CAAE,mBAFP,CAGLC,MAAM,CAAE,QAHH,CAILC,YAAY,CAAE,IAJT,CAKLC,SAAS,CAAE,KALN,CAMLC,YAAY,CAAE,IANT,CAOL,UAAW,CACTJ,UAAU,CAAE,SADH,CAPN,CARgC,CAAZ,EAAD,CAA5B,CAqBA,cAAe,SAASK,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC5C,GAAMC,CAAAA,OAAO,CAAGhB,SAAS,EAAzB,CACA,GAAMC,CAAAA,KAAK,CAAGF,QAAQ,EAAtB,CACA,GAAMkB,CAAAA,UAAU,CAAGnB,aAAa,CAACG,KAAK,CAACiB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC,CAGA,mBAEI,oBAAC,MAAD,EACE,UAAU,CAAEF,UADd,CAEE,QAAQ,CAAC,IAFX,CAGE,SAAS,CAAC,IAHZ,CAIE,SAAS,CAAED,OAAO,CAACX,MAJrB,CAKE,IAAI,CAAEU,KAAK,CAACK,IALd,CAME,OAAO,CAAEL,KAAK,CAACM,OANjB,CAOE,kBAAgB,wBAPlB,eASE,oBAAC,aAAD,EAAe,SAAS,CAAEL,OAAO,CAACX,MAAlC,eACE,2BAAK,GAAG,CAAC,8BAAT,CAAwC,GAAG,CAAEU,KAAK,CAACO,MAAnD,CAA2D,SAAS,CAAEN,OAAO,CAACd,KAA9E,CAAqF,MAAM,CAAC,MAA5F,CAAmG,KAAK,CAAC,MAAzG,EADF,CATF,cAYE,oBAAC,aAAD,mBACE,oBAAC,MAAD,EAAQ,OAAO,CAAEa,KAAK,CAACM,OAAvB,CAAgC,SAAS,CAAEL,OAAO,CAACT,MAAnD,UADF,CAZF,CAFJ,CAqBD","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image:{\r\n      maxWidth: '100%',\r\n      maxHeight: '100%'\r\n  },\r\n  dialog:{\r\n      textAlign: 'center'\r\n  },\r\n  button:{\r\n    color: 'black',\r\n    background: 'rgb(228, 130, 74)',\r\n    margin: '0 auto',\r\n    borderRadius: '2%',\r\n    marginTop: '2px',\r\n    marginBottom: '4x',\r\n    \"&:hover\": {\r\n      background: '#567CAA'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function ModalComponent(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\r\n  return (\r\n      \r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        maxWidth=\"lg\"\r\n        maxHeight=\"lg\"\r\n        className={classes.dialog}\r\n        open={props.open}\r\n        onClose={props.onClick}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogContent className={classes.dialog}>\r\n          <img alt=\"gif that is supposed to load\" src={props.gifUrl} className={classes.image} height=\"auto\" width=\"auto\"/>\r\n        </DialogContent>\r\n        <DialogActions >\r\n          <Button onClick={props.onClick} className={classes.button}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}