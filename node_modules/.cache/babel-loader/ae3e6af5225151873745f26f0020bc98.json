{"ast":null,"code":"import React from'react';import{makeStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import useMediaQuery from'@material-ui/core/useMediaQuery';import{useTheme}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{image:{maxWidth:'95%',maxHeight:'95%'},dialog:{textAlign:'center',height:'auto',width:'auto',backgroundColor:'#dddddd'},actions:{backgroundColor:'#dddddd'},button:{color:'black',background:'rgb(228, 130, 74)',margin:'0 auto',height:'80px',width:'90px',borderRadius:'4%',marginTop:'4px',marginBottom:'60px',\"&:hover\":{background:'#567CAA'}}};});export default function ModalImageComponent(props){var classes=useStyles();var theme=useTheme();var fullScreen=useMediaQuery(theme.breakpoints.down('sm'));return/*#__PURE__*/React.createElement(Dialog,{fullScreen:fullScreen,maxWidth:\"lg\",open:props.over,onClose:props.onClick,\"aria-labelledby\":\"max-width-dialog-title\"},/*#__PURE__*/React.createElement(DialogContent,{className:classes.dialog},/*#__PURE__*/React.createElement(\"img\",{alt:\"gif that is supposed to load\",src:props.image,className:classes.image,height:\"auto\",width:\"auto\"})),/*#__PURE__*/React.createElement(DialogActions,{className:classes.actions},/*#__PURE__*/React.createElement(Button,{onClick:props.onClick,className:classes.button},\"Close\")));}","map":{"version":3,"sources":["C:/Users/thoma/Files/deployWebsite/src/components/mainPage/ModalImage.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","useMediaQuery","useTheme","useStyles","theme","image","maxWidth","maxHeight","dialog","textAlign","height","width","backgroundColor","actions","button","color","background","margin","borderRadius","marginTop","marginBottom","ModalImageComponent","props","classes","fullScreen","breakpoints","down","over","onClick"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,OAASC,QAAT,KAAyB,0BAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,SAACS,KAAD,QAAY,CACvCC,KAAK,CAAC,CACFC,QAAQ,CAAE,KADR,CAEFC,SAAS,CAAE,KAFT,CADiC,CAKvCC,MAAM,CAAC,CACHC,SAAS,CAAE,QADR,CAEHC,MAAM,CAAE,MAFL,CAGHC,KAAK,CAAE,MAHJ,CAIHC,eAAe,CAAE,SAJd,CALgC,CAYvCC,OAAO,CAAC,CACND,eAAe,CAAE,SADX,CAZ+B,CAgBvCE,MAAM,CAAC,CACLC,KAAK,CAAE,OADF,CAELC,UAAU,CAAE,mBAFP,CAGLC,MAAM,CAAE,QAHH,CAILP,MAAM,CAAE,MAJH,CAKLC,KAAK,CAAE,MALF,CAMLO,YAAY,CAAE,IANT,CAOLC,SAAS,CAAE,KAPN,CAQLC,YAAY,CAAE,MART,CASL,UAAW,CACTJ,UAAU,CAAE,SADH,CATN,CAhBgC,CAAZ,EAAD,CAA5B,CA+BA,cAAe,SAASK,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACjD,GAAMC,CAAAA,OAAO,CAAGpB,SAAS,EAAzB,CACA,GAAMC,CAAAA,KAAK,CAAGF,QAAQ,EAAtB,CACA,GAAMsB,CAAAA,UAAU,CAAGvB,aAAa,CAACG,KAAK,CAACqB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC,CAEA,mBAEI,oBAAC,MAAD,EACE,UAAU,CAAEF,UADd,CAEE,QAAQ,CAAC,IAFX,CAGE,IAAI,CAAEF,KAAK,CAACK,IAHd,CAIE,OAAO,CAAEL,KAAK,CAACM,OAJjB,CAKE,kBAAgB,wBALlB,eAOE,oBAAC,aAAD,EAAe,SAAS,CAAEL,OAAO,CAACf,MAAlC,eACE,2BAAK,GAAG,CAAC,8BAAT,CAAwC,GAAG,CAAEc,KAAK,CAACjB,KAAnD,CAA0D,SAAS,CAAEkB,OAAO,CAAClB,KAA7E,CAAoF,MAAM,CAAC,MAA3F,CAAkG,KAAK,CAAC,MAAxG,EADF,CAPF,cAUE,oBAAC,aAAD,EAAe,SAAS,CAAEkB,OAAO,CAACV,OAAlC,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAES,KAAK,CAACM,OAAvB,CAAgC,SAAS,CAAEL,OAAO,CAACT,MAAnD,UADF,CAVF,CAFJ,CAmBD","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image:{\r\n      maxWidth: '95%',\r\n      maxHeight: '95%'\r\n  },\r\n  dialog:{\r\n      textAlign: 'center',\r\n      height: 'auto',\r\n      width: 'auto',\r\n      backgroundColor: '#dddddd'\r\n  },\r\n\r\n  actions:{\r\n    backgroundColor: '#dddddd'\r\n  },\r\n\r\n  button:{\r\n    color: 'black',\r\n    background: 'rgb(228, 130, 74)',\r\n    margin: '0 auto',\r\n    height: '80px',\r\n    width: '90px',\r\n    borderRadius: '4%',\r\n    marginTop: '4px',\r\n    marginBottom: '60px',\r\n    \"&:hover\": {\r\n      background: '#567CAA'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function ModalImageComponent(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n      \r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        maxWidth=\"lg\"\r\n        open={props.over}\r\n        onClose={props.onClick}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogContent className={classes.dialog}>\r\n          <img alt=\"gif that is supposed to load\" src={props.image} className={classes.image} height=\"auto\" width=\"auto\"/>\r\n        </DialogContent>\r\n        <DialogActions className={classes.actions}>\r\n          <Button onClick={props.onClick} className={classes.button}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}